openapi: 3.0.3
info:
  title: ITX IOP TRANSPORT hiring sample API
  description: |-
    ITX IOP TRANSPORT hiring sample API
  version: 1.0.0
servers:
  - url: http://localhost:8080
    description: Local server
tags:
  - name: Shipments
    description: Shipment operation endpoints
paths:
  /shipments:
    get:
      summary: Get all shipments
      description: Retrieve a list of all shipments.
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Shipment'
        '204':
          description: No content available
        
    delete:
      tags:
        - Shipments
      summary: Endpoint to purge shipments just processed (status DISCARDED or PLANNED)
      description: |-
        Endpoint to purge shipments just processed (status DISCARDED or PLANNED). PENDING shipments will not be deleted
      operationId: purgeShipments
      responses:
        '200':
          description: Successful operation
        '404':
          $ref: '#/components/responses/NotFound'
  /shipments/process:
    post:
      tags:
        - Shipments
      summary: Endpoint to process pending shipments
      description: |-
        Dijkstra algorithm to process pending shipments and calculate the best route
      operationId: processPendingShipments
      responses:
        '200':
          description: Successful operation
  /shipment/_shipmentId_param_:
    get:
      tags:
        - Shipments
      summary: Get global information about a concrete shipment
      description: |-
        Retrieve information related to a shipment using the shipment identifier
        Collects data about the truck details, location stops and loaded packages
      operationId: getShipment
      parameters:
       - name: shipmentId
      in: path
      required: true
      schema:
         type: string
         format: uuid
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Shipment'
            application/xml:
              schema:
                $ref: '#/components/schemas/Shipment'
            text/csv:
              schema:
                type: string
        '404':
          $ref: '#/components/responses/NotFound'
components:
  responses:
    NotFound:
      description: The specified resource was not found
  schemas:
    ShipmentInput:
      type: object
      properties:
        shipmentId:
          type: string
          format: uuid
        originCityCode:
          type: string
          minLength: 3
          maxLength: 3
        destinationCityCode:
          type: string
          minLength: 3
          maxLength: 3
        departureDate:
          type: string
          format: date-time
        expectedArrivalDate:
          type: string
          format: date-time
      required:
        - shipmentId
        - originCityCode
        - destinationCityCode
    Shipment:
      type: object
      properties:
          shipmentId:
            type: string
            format: uuid
            description: The unique identifier for the shipment
          origin:
            $ref: '#/components/schemas/City'
            description: Information about the origin city
          destination:
            $ref: '#/components/schemas/City'
            description: Information about the destination city
          departureDate:
            type: string
            format: date-time
            description: The date and time when the shipment is expected to depart
          expectedArrivalDate:
            type: string
            format: date-time
            description: The date and time when the shipment is expected to arrive
          status:
            type: string
            enum:
              - PENDING
              - DISCARDED
              - PLANNED
            description: The current status of the shipment
          routePlan:
            type: array
            items:
              $ref: '#/components/schemas/Route'
            description: The planned route for the shipment         
      examples:
        example1:
          summary: Example Shipment
          value:
            shipmentId: "123e4567-e89b-12d3-a456-426614174000"
            originCity:
              cityId: "456e7890-f12d-34a5-b678-901234567890"
              cityName: "New York"
              cityCode: "NYC"
            destinationCity:
              cityId: "7890abcd-12ef-34gh-567i-890jklmno123"
              cityName: "Los Angeles"
              cityCode: "LAX"
            departureDate: "2024-07-29T12:00:00Z"
            expectedArrivalDate: "2024-07-30T12:00:00Z"
            status: "PENDING"
            routePlan:
              - routeId: "abc123"
                routeName: "Route A"
                waypoints:
                  - "Point 1"
                  - "Point 2"
                  - "Point 3"        
    City:      
      type: object
      properties:
          code: 
            type: string
            description: City identifier (3-char unique udentifier)
            minLength: 3
            maxLength: 3
            example: MAD
          name: 
            type: string
            description: City full name
            minLength: 1
            maxLength: 9999
            example: Madrid
          handlingCost:
            type: number
            format: double
            description: Handling cost
            example: 10.0
      required:
          - code
          - name
    Route:
      type: object
      properties:
        id:
          type: string
          description: Shipment identifier (UUID)
          format: uuid
          example: 123e4567-e89b-12d3-a456-426614174000
        origin:
          $ref: '#/components/schemas/City'
        destination:
          $ref: '#/components/schemas/City'
        transportType:
          enum: [TRUCK, TRAIN, SEA, AIR]
          description: Transport type
          example: TRUCK
        cost:
          type: string
          format: dur-time
          description: Route time Cost (duration in hours)
          example: T12H
        handlingCost:
          type: number
          format: double
          description: Handling cost
          example: 10.0
      required:
        - code
        - name
    Error:
      type: object
      properties:
        info:
          type: string
          description: Info about the error
          example: [invalid operation service not ready]
      required: 
        - info
